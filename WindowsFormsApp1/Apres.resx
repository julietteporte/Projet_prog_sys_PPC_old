<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>